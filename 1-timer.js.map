{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst input = document.querySelector('#datetime-picker');\n\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\nconst startButton = document.querySelector('[type=\"button\"]');\n\nstartButton.disabled = true;\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = new Date();\n\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < date) {\n      startButton.disabled = true;\n      window.alert('Please choose a date in the future');\n    } else {\n      startButton.disabled = false;\n      console.log(userSelectedDate);\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener('click', reverseCountInterval);\n\nfunction reverseCountInterval() {\n  const indexInterval = setInterval(() => {\n    const allMs = userSelectedDate - new Date();\n\n    const { days, hours, minutes, seconds } = convertMs(allMs);\n    daysField.textContent = days;\n    hoursField.textContent = hours;\n    minutesField.textContent = minutes;\n    secondsField.textContent = seconds;\n  }, 1000);\n}\n\nflatpickr(input, options);\n"],"names":["input","daysField","hoursField","minutesField","secondsField","startButton","userSelectedDate","options","selectedDates","date","convertMs","ms","days","hours","minutes","seconds","reverseCountInterval","allMs","flatpickr"],"mappings":"0xBAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAc,SAAS,cAAc,iBAAiB,EAE5DA,EAAY,SAAW,GAEvB,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAO,IAAI,KAEjBH,EAAmBE,EAAc,CAAC,EAE9BF,EAAmBG,GACrBJ,EAAY,SAAW,GACvB,OAAO,MAAM,oCAAoC,IAEjDA,EAAY,SAAW,GACvB,QAAQ,IAAIC,CAAgB,EAE/B,CACH,EAEA,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAV,EAAY,iBAAiB,QAASW,CAAoB,EAE1D,SAASA,GAAuB,CACR,YAAY,IAAM,CACtC,MAAMC,EAAQX,EAAmB,IAAI,KAE/B,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAK,EACzDhB,EAAU,YAAcW,EACxBV,EAAW,YAAcW,EACzBV,EAAa,YAAcW,EAC3BV,EAAa,YAAcW,CAC5B,EAAE,GAAI,CACT,CAEAG,EAAUlB,EAAOO,CAAO"}